version: '3.8'

services:
  app:
    image: flask-app
    deploy:
      replicas: 3
    networks:
      - frontend
      - backend

  redis:
    image: redis:alpine
    networks:
      - backend

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "pass"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  nginx:
    image: nginx-proxy
    ports:
      - "8082:80"
    networks:
      - frontend
    depends_on:
      - app

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - backend

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - backend

  portainer:
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9443:9443"
    networks:
      - backend

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"
    networks:
      - backend

volumes:
  pgdata:

networks:
  frontend:
  backend:

